pipeline {
  agent none
  

  stages {
    stage('build'){
      agent {
        docker {
          image 'python:2.7.16-slim'
          args '--user root'
        }
      }
      when {
        changeset "**/vote/**"
      }
      steps{
        echo 'Compiling vote app'
        dir('vote'){
          sh 'pip install -r requirements.txt'
        }
      }
    }
    stage('test'){
      agent {
        docker {
          image 'python:2.7.16-slim'
          args '--user root'
        }
      }
      when {
        changeset "**/vote/**"
      }
      steps{
        echo 'Running Unit Tests on vote app'
        dir('vote'){
          sh 'pip install -r requirements.txt'
          sh 'nosetests -v'
        }
      }
    }

     stage('docker-package'){
      agent any
      when {
        changeset "**/vote/**"
      }
      steps{
        echo 'Packaging vote app with docker'
        script {
          docker.withRegistry('https://docker.home.georcon.com', 'docker.home.georcon.com-secret') {
            def voteImage = docker.build("georcon/vote:v${env.BUILD_ID}", "./worker")
            voteImage.push()
            voteImage.push("${env.BRANCH_NAME}")
          }
        }
      }
    }
    
  }
  post {
    always{
      echo 'Pipeline for worker is complete...'
      slackSend (channel: 'testing-jenkins-integration', message: "Building... - ${env.JOB_NAME}")
    }
    failure{
      echo 'Something bad happened...'
      slackSend (channel: 'testing-jenkins-integration', message: 'Build Failed - ${env.JOB_NAME}')
    }
    success{
      slackSend (channel: 'testing-jenkins-integration', message: "Build Succeeded! - ${env.JOB_NAME}")
    }
  }
}
